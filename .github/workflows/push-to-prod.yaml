name: push-to-prod.yaml
on:
  push:
    branches:
      - main

permissions:
  contents: read
  packages: write

jobs:
  build-docker:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v5

      - name: Docker Login
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Get PR Number
        id: timestamp
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          PR_NUM=$(gh pr list --search '${{github.sha}}' -s all --json number -q '.[] | .number' || echo "latest")
          TIMESTAMP=$(printf '%(%Y.%m.%d.%H%M%S)T\n' -1)
          echo "container-tag=$PR_NUM.$TIMESTAMP" >> $GITHUB_OUTPUT

      - name: Docker Build
        uses: docker/build-push-action@v6
        with:
          context: .
          push: true
          tags: ghcr.io/terra-magma/terrastack-docs:latest,ghcr.io/terra-magma/terrastack-docs:${{ steps.timestamp.outputs.container-tag }}

  terraform:
    name: 'Terraform'
    runs-on: ubuntu-latest
    needs: build-docker

    defaults:
      run:
        shell: bash

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3

      - name: Terraform Init
        run: terraform init
        working-directory: ./terraform
        env:
          PG_CONN_STR: ${{ secrets.POSTGRES_CONNECTION_STRING }}

      - name: Terraform Format
        run: terraform fmt -check
        working-directory: ./terraform

      - name: Terraform Plan
        env:
          TF_VAR_portainer_url: ${{ secrets.PORTAINER_URL }}
          TF_VAR_portainer_api_key: ${{ secrets.PORTAINER_API_KEY }}
          TF_VAR_github_registry_username: ${{ github.actor }}
          TF_VAR_github_registry_access_token: ${{ secrets.GITHUB_TOKEN }}
          TF_VAR_terramagma_local_ip: ${{ secrets.TERRAMAGMA_LOCAL_IP }}
          PG_CONN_STR: ${{ secrets.POSTGRES_CONNECTION_STRING }}
        run: terraform plan -input=false
        working-directory: ./terraform

      - name: Terraform Apply
        if: github.ref == 'refs/heads/main' && github.event_name == 'push'
        env:
          TF_VAR_portainer_url: ${{ secrets.PORTAINER_URL }}
          TF_VAR_portainer_api_key: ${{ secrets.PORTAINER_API_KEY }}
          TF_VAR_github_registry_username: ${{ github.actor }}
          TF_VAR_github_registry_access_token: ${{ secrets.GITHUB_TOKEN }}
          TF_VAR_terramagma_local_ip: ${{ secrets.TERRAMAGMA_LOCAL_IP }}
          PG_CONN_STR: ${{ secrets.POSTGRES_CONNECTION_STRING }}
          PGUSER: ${{ secrets.POSTGRES_USER }}
          PGPASSWORD: ${{ secrets.POSTGRES_PASSWORD }}
        run: terraform apply -auto-approve -input=false
        working-directory: ./terraform

